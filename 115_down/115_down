#!/usr/bin/perl
#This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.
#written by Fengyuan Chen.
#cfy1990 at gmail dot com

use strict;
use warnings;
use Getopt::Long;
use 5.010;
use Pod::Usage;
use WWW::Mechanize;
use Encode;
use utf8;

use constant UA => 'Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60';
use constant VERSION => 1.1;

my $mech=WWW::Mechanize->new(agent=>UA);

sub login{
    my $username=shift;
    my $passwd=shift;
    my $mech=shift;
    $mech->get('http://u.115.com');
    $mech->submit_form(
		       with_fields=>{
				     'login[account]'=>$username,
				     'login[passwd]'=>$passwd,
				     }
		      );
}
sub get_content{
    my $mech=shift;
    my $url=shift;
    $mech->get($url);
    if ($mech->success) {
	return $mech->content;
    }
    else{
	warn "get_content error:".$mech->status;
	return undef;
    }
}

GetOptions(
	   'file|f=s' => \ my $file,
	   'show|s' => \ my $show,
	   'help|h' => \ my $help,
	   'login|l=s'=>\ my $login,
	   'version|V'=>\ my $version,
	  );
if(defined $version){
    say 'version:'.VERSION;
    exit 0;
}

if(defined $help|| (! defined $file && (scalar @ARGV == 0) ) ) {
    pod2usage(1);
}
my @web_urls;
if(scalar @ARGV > 0){
    @web_urls=@ARGV;
    @ARGV=();
}
if(defined $file){
    my @files=split /,/,$file;
    unshift @ARGV,@files;
    my $urls=join "",<>;
    while($urls=~m{(\Qhttp://u.115.com/file/\E[a-z0-9]++)}g){
	#http://u.115.com/file/t99717cfae
	push @web_urls,$1;
    }
}
unless(@web_urls){
    pod2usage(1);
}
if(defined $login){
    if($login eq ''){
	&login('115_down','fn4=IplVhkmwtqvjh7dy',$mech);
    }
    else{
	&login((split /,/,$login),$mech);
    }
}
#get to download urls
#open URL,'<','url';
#close URL;
for my $web_url (@web_urls) {
    chomp($web_url);
    #get real download urls
    my $web_content=get_content($mech,$web_url);
    my ($file_name,$file_url);
    given($web_content){
	when(m{\Qpickcode_error">\E([^<]+)\Q</div>\E}){
	    say encode 'utf-8',$1;
	}
 	default{
	    $web_content=~m{\Q<div class="fl"><i class="file-type"></i>\E([^<]+)\Q</div>\E} && ($file_name = $1);
	    $web_content=~m{(http://(?:\d+?\.)?bak\.[^"]+)} && ($file_url=$1);
	    unless($file_name && $file_url){
		say "file_url:".($file_url//"none");
		say encode 'utf-8',"file_name:".($file_name//"none");
		say $web_url;
		exit 1;
	    }
	    #download files
	    unless(defined $show){
		system('wget','-c','-U',UA,$file_url,'--timeout=10','-O',$file_name);
		exit $? if $?;
		sleep 1;
	    } else {
		say encode 'utf-8',"$file_name\:\:\:$file_url";
	    }
	}
    }
}

__END__

=head1 NAME

115_down - A simple 115.com file downloader  written by cfy (cfy1990 at gmail dot com)

=head1 SYNOPSIS

115_down [-l|--login username(email address,passwd] [-f|--file  file] [-s] [-h|--help] [-V|--version] [url]

=head1 OPTIONS

=item B<-l,--login>
login in to get some resource that need logined.

=item B<-f, --file>
specify the files to read urls.Multiple files can be given,separated by commas.use '-' to read from stdin.

=item B<-s, --show>
show the download urls instead download them

=item B<-V,--version>
show version

=item B<--help>
print help

=cut
